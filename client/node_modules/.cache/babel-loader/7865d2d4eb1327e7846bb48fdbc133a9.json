{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-perezj2020\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './EditPost.css';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useNavigate(); // Use history for redirects\n\n  const [post, setPost] = useState({\n    id: null,\n    title: \"\",\n    author: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    // Fetch post data when the component mounts\n    const fetchPost = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').select('*').eq('id', id).single();\n\n      if (error) {\n        console.error('Error fetching post:', error);\n      } else {\n        setPost(data);\n      }\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const updatePost = async event => {\n    event.preventDefault(); // Prevent form submission\n\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').update({\n      title: post.title,\n      author: post.author,\n      description: post.description\n    }).eq('id', id);\n\n    if (error) {\n      console.error('Error updating post:', error);\n    } else {\n      history.push(\"/\"); // Redirect to home using history\n    }\n  };\n\n  const deletePost = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').delete().eq('id', id);\n\n    if (error) {\n      console.error('Error deleting post:', error);\n    } else {\n      history.push(\"/\"); // Redirect to home using history\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPost(prev => ({ ...prev,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: deletePost,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPost, \"pvE9grR6WZa5kmQeneF3zqWenbg=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","supabase","EditPost","id","history","post","setPost","title","author","description","fetchPost","data","error","from","select","eq","single","console","updatePost","event","preventDefault","update","push","deletePost","delete","handleChange","name","value","target","prev"],"sources":["C:/Users/jp/OneDrive/Documents/GitHub/final-project-perezj2020/client/src/pages/EditPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './EditPost.css';\r\nimport { supabase } from '../client';\r\n\r\nconst EditPost = () => {\r\n    const { id } = useParams();\r\n    const history = useNavigate(); // Use history for redirects\r\n    const [post, setPost] = useState({ id: null, title: \"\", author: \"\", description: \"\" });\r\n\r\n    useEffect(() => {\r\n        // Fetch post data when the component mounts\r\n        const fetchPost = async () => {\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n            if (error) {\r\n                console.error('Error fetching post:', error);\r\n            } else {\r\n                setPost(data);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, [id]);\r\n\r\n    const updatePost = async (event) => {\r\n        event.preventDefault(); // Prevent form submission\r\n\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .update({ title: post.title, author: post.author, description: post.description })\r\n            .eq('id', id);\r\n\r\n        if (error) {\r\n            console.error('Error updating post:', error);\r\n        } else {\r\n            history.push(\"/\"); // Redirect to home using history\r\n        }\r\n    };\r\n\r\n    const deletePost = async () => {\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .delete()\r\n            .eq('id', id);\r\n\r\n        if (error) {\r\n            console.error('Error deleting post:', error);\r\n        } else {\r\n            history.push(\"/\"); // Redirect to home using history\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setPost(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={updatePost}>\r\n                {/* Form fields and submit button */}\r\n            </form>\r\n            <button className=\"deleteButton\" onClick={deletePost}>Delete</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAASH,SAAS,EAAxB;EACA,MAAMI,OAAO,GAAGL,WAAW,EAA3B,CAFmB,CAEY;;EAC/B,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;IAAEM,EAAE,EAAE,IAAN;IAAYI,KAAK,EAAE,EAAnB;IAAuBC,MAAM,EAAE,EAA/B;IAAmCC,WAAW,EAAE;EAAhD,CAAD,CAAhC;EAEAX,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,SAAS,GAAG,YAAY;MAC1B,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMX,QAAQ,CACjCY,IADyB,CACpB,OADoB,EAEzBC,MAFyB,CAElB,GAFkB,EAGzBC,EAHyB,CAGtB,IAHsB,EAGhBZ,EAHgB,EAIzBa,MAJyB,EAA9B;;MAKA,IAAIJ,KAAJ,EAAW;QACPK,OAAO,CAACL,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACH,CAFD,MAEO;QACHN,OAAO,CAACK,IAAD,CAAP;MACH;IACJ,CAXD;;IAaAD,SAAS;EACZ,CAhBQ,EAgBN,CAACP,EAAD,CAhBM,CAAT;;EAkBA,MAAMe,UAAU,GAAG,MAAOC,KAAP,IAAiB;IAChCA,KAAK,CAACC,cAAN,GADgC,CACR;;IAExB,MAAM;MAAET,IAAF;MAAQC;IAAR,IAAkB,MAAMX,QAAQ,CACjCY,IADyB,CACpB,OADoB,EAEzBQ,MAFyB,CAElB;MAAEd,KAAK,EAAEF,IAAI,CAACE,KAAd;MAAqBC,MAAM,EAAEH,IAAI,CAACG,MAAlC;MAA0CC,WAAW,EAAEJ,IAAI,CAACI;IAA5D,CAFkB,EAGzBM,EAHyB,CAGtB,IAHsB,EAGhBZ,EAHgB,CAA9B;;IAKA,IAAIS,KAAJ,EAAW;MACPK,OAAO,CAACL,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;IACH,CAFD,MAEO;MACHR,OAAO,CAACkB,IAAR,CAAa,GAAb,EADG,CACgB;IACtB;EACJ,CAbD;;EAeA,MAAMC,UAAU,GAAG,YAAY;IAC3B,MAAM;MAAEZ,IAAF;MAAQC;IAAR,IAAkB,MAAMX,QAAQ,CACjCY,IADyB,CACpB,OADoB,EAEzBW,MAFyB,GAGzBT,EAHyB,CAGtB,IAHsB,EAGhBZ,EAHgB,CAA9B;;IAKA,IAAIS,KAAJ,EAAW;MACPK,OAAO,CAACL,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;IACH,CAFD,MAEO;MACHR,OAAO,CAACkB,IAAR,CAAa,GAAb,EADG,CACgB;IACtB;EACJ,CAXD;;EAaA,MAAMG,YAAY,GAAIN,KAAD,IAAW;IAC5B,MAAM;MAAEO,IAAF;MAAQC;IAAR,IAAkBR,KAAK,CAACS,MAA9B;IACAtB,OAAO,CAACuB,IAAI,KAAK,EAAE,GAAGA,IAAL;MAAW,CAACH,IAAD,GAAQC;IAAnB,CAAL,CAAL,CAAP;EACH,CAHD;;EAKA,oBACI;IAAA,wBACI;MAAM,QAAQ,EAAET;IAAhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAQ,SAAS,EAAC,cAAlB;MAAiC,OAAO,EAAEK,UAA1C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAhED;;GAAMrB,Q;UACaF,S,EACCD,W;;;KAFdG,Q;AAkEN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}