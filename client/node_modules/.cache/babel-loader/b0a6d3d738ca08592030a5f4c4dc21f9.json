{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-perezj2020\\\\client\\\\src\\\\pages\\\\ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../components/Card';\nimport { supabase } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = props => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sortType, setSortType] = useState('likes'); // Default sorting by likes\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      let query = supabase.from('Posts').select('*');\n\n      if (sortType === 'likes') {\n        query = query.order('likes', {\n          ascending: false\n        });\n      } else if (sortType === 'created_at') {\n        query = query.order('created_at', {\n          ascending: false\n        });\n      }\n\n      const {\n        data,\n        error\n      } = await query;\n\n      if (error) {\n        console.error('Error fetching posts:', error);\n        return;\n      }\n\n      setPosts(data);\n    };\n\n    fetchPosts();\n  }, [sortType]); // Re-fetch posts when sortType changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReadPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sort-button\",\n        onClick: () => setSortType('likes'),\n        children: \"Sort by Likes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sort-button\",\n        onClick: () => setSortType('created_at'),\n        children: \"Sort by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), posts && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(Card, {\n      created_at: post.created_at,\n      id: post.id,\n      title: post.title,\n      author: post.author,\n      description: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: 'Empty Crew huh?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadPosts, \"tgJcnoYO4NXjVQ5DSOmEIHwJABI=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","Card","supabase","ReadPosts","props","posts","setPosts","sortType","setSortType","fetchPosts","query","from","select","order","ascending","data","error","console","length","map","post","index","created_at","id","title","author","description"],"sources":["C:/Users/jp/OneDrive/Documents/GitHub/final-project-perezj2020/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Card from '../components/Card';\r\nimport { supabase } from '../client';\r\n\r\nconst ReadPosts = (props) => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [sortType, setSortType] = useState('likes'); // Default sorting by likes\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            let query = supabase.from('Posts').select('*');\r\n\r\n            if (sortType === 'likes') {\r\n                query = query.order('likes', { ascending: false });\r\n            } else if (sortType === 'created_at') {\r\n                query = query.order('created_at', { ascending: false });\r\n            }\r\n\r\n            const { data, error } = await query;\r\n\r\n            if (error) {\r\n                console.error('Error fetching posts:', error);\r\n                return;\r\n            }\r\n            setPosts(data);\r\n        };\r\n\r\n        fetchPosts();\r\n    }, [sortType]);  // Re-fetch posts when sortType changes\r\n\r\n    return (\r\n        <div className=\"ReadPosts\">\r\n            <div className=\"sort-buttons-container\">\r\n                <button className=\"sort-button\" onClick={() => setSortType('likes')}>Sort by Likes</button>\r\n                <button className=\"sort-button\" onClick={() => setSortType('created_at')}>Sort by Date</button>\r\n            </div>\r\n                {\r\n                posts && posts.length > 0 ?\r\n                posts.map((post,index) => \r\n                   <Card created_at={post.created_at} id={post.id} title={post.title} author={post.author} description={post.description}/>\r\n                ) : <h2>{'Empty Crew huh?'}</h2>\r\n                }\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default ReadPosts;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAEzB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,OAAD,CAAxC,CAHyB,CAG0B;;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,YAAY;MAC3B,IAAIC,KAAK,GAAGR,QAAQ,CAACS,IAAT,CAAc,OAAd,EAAuBC,MAAvB,CAA8B,GAA9B,CAAZ;;MAEA,IAAIL,QAAQ,KAAK,OAAjB,EAA0B;QACtBG,KAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,OAAZ,EAAqB;UAAEC,SAAS,EAAE;QAAb,CAArB,CAAR;MACH,CAFD,MAEO,IAAIP,QAAQ,KAAK,YAAjB,EAA+B;QAClCG,KAAK,GAAGA,KAAK,CAACG,KAAN,CAAY,YAAZ,EAA0B;UAAEC,SAAS,EAAE;QAAb,CAA1B,CAAR;MACH;;MAED,MAAM;QAAEC,IAAF;QAAQC;MAAR,IAAkB,MAAMN,KAA9B;;MAEA,IAAIM,KAAJ,EAAW;QACPC,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;QACA;MACH;;MACDV,QAAQ,CAACS,IAAD,CAAR;IACH,CAhBD;;IAkBAN,UAAU;EACb,CApBQ,EAoBN,CAACF,QAAD,CApBM,CAAT,CALyB,CAyBR;;EAEjB,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAK,SAAS,EAAC,wBAAf;MAAA,wBACI;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAE,MAAMC,WAAW,CAAC,OAAD,CAA1D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,SAAS,EAAC,aAAlB;QAAgC,OAAO,EAAE,MAAMA,WAAW,CAAC,YAAD,CAA1D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAMQH,KAAK,IAAIA,KAAK,CAACa,MAAN,GAAe,CAAxB,GACAb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBACP,QAAC,IAAD;MAAM,UAAU,EAAED,IAAI,CAACE,UAAvB;MAAmC,EAAE,EAAEF,IAAI,CAACG,EAA5C;MAAgD,KAAK,EAAEH,IAAI,CAACI,KAA5D;MAAmE,MAAM,EAAEJ,IAAI,CAACK,MAAhF;MAAwF,WAAW,EAAEL,IAAI,CAACM;IAA1G;MAAA;MAAA;MAAA;IAAA,QADH,CADA,gBAGI;MAAA,UAAK;IAAL;MAAA;MAAA;MAAA;IAAA,QATZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAzCD;;GAAMvB,S;;KAAAA,S;AA2CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}