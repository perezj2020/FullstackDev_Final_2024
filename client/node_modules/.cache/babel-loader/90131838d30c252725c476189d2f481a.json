{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-perezj2020\\\\client\\\\src\\\\pages\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../client';\nimport './Postdetail.css';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetPosts = () => {\n  _s();\n\n  const [selectedCard, setSelectedCard] = useState(null);\n  const {\n    id\n  } = useParams(); // Retrieve the 'id' from the URL\n\n  const [likes, setLikes] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    async function fetchPost() {\n      // Fetch the post using the id from the URL parameter\n      const {\n        data,\n        error\n      } = await supabase.from('Posts').select('*').eq('id', id).single();\n\n      if (error) {\n        console.error('Error fetching post:', error);\n        return;\n      }\n\n      setSelectedCard(data); // Set the retrieved post to state\n\n      setLikes(data.likes || 0);\n    }\n\n    fetchPost();\n  }, [id]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('comments').select('*').eq('post_id', id); // Ensure you are matching the post ID\n\n      if (error) {\n        console.error('Error fetching comments:', error);\n      } else {\n        setComments(data);\n      }\n    };\n\n    if (selectedCard) {\n      fetchComments();\n    }\n  }, [id, selectedCard]); // Fetch comments when selectedCard is loaded\n  // Conditional rendering to handle loading and error state\n\n  if (!selectedCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DetPosts\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading or no data found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n\n  const incrementLikes = async () => {\n    const newLikes = likes + 1;\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').update({\n      likes: newLikes\n    }).eq('id', id);\n\n    if (!error) {\n      setLikes(newLikes); // Update likes state\n    } else {\n      console.error('Error updating likes:', error);\n    }\n  };\n\n  const handleCommentSubmit = async event => {\n    event.preventDefault();\n    const {\n      data,\n      error\n    } = await supabase.from('comments').insert([{\n      post_id: id,\n      content: newComment // If you have user authentication, you can add an author_id here\n\n    }]);\n\n    if (error) {\n      console.error('Error submitting comment:', error);\n    } else {\n      setComments([...comments, data[0]]);\n      setNewComment(''); // Reset the form\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DetPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: selectedCard.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Meal Type:  \", selectedCard.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recipe:  \", selectedCard.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"headerBtn\",\n          children: \" Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${selectedCard.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit or Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"likeButton\",\n        onClick: incrementLikes,\n        children: [\"Like \", likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCommentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Write your comment...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetPosts, \"uCdimoyZp8cFQFTkZIMF1hAUqBc=\", false, function () {\n  return [useParams];\n});\n\n_c = DetPosts;\nexport default DetPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetPosts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","supabase","Link","Card","DetPosts","selectedCard","setSelectedCard","id","likes","setLikes","comments","setComments","newComment","setNewComment","fetchPost","data","error","from","select","eq","single","console","fetchComments","incrementLikes","newLikes","update","handleCommentSubmit","event","preventDefault","insert","post_id","content","title","description","author","e","target","value","map","comment","created_at"],"sources":["C:/Users/jp/OneDrive/Documents/GitHub/final-project-perezj2020/client/src/pages/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport './Postdetail.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../components/Card.js';\r\n\r\n\r\nconst DetPosts = () => {\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    const { id } = useParams();  // Retrieve the 'id' from the URL\r\n    const [likes, setLikes] = useState(0);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchPost() {\r\n            // Fetch the post using the id from the URL parameter\r\n            const { data, error } = await supabase\r\n                .from('Posts')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) {\r\n                console.error('Error fetching post:', error);\r\n                return;\r\n            }\r\n\r\n            setSelectedCard(data);  // Set the retrieved post to state\r\n            setLikes(data.likes || 0);\r\n        }\r\n\r\n        fetchPost();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const fetchComments = async () => {\r\n          const { data, error } = await supabase\r\n            .from('comments')\r\n            .select('*')\r\n            .eq('post_id', id); // Ensure you are matching the post ID\r\n      \r\n          if (error) {\r\n            console.error('Error fetching comments:', error);\r\n          } else {\r\n            setComments(data);\r\n          }\r\n        };\r\n      \r\n        if (selectedCard) {\r\n          fetchComments();\r\n        }\r\n      }, [id, selectedCard]); // Fetch comments when selectedCard is loaded\r\n      \r\n    // Conditional rendering to handle loading and error state\r\n    if (!selectedCard) {\r\n        return <div className=\"DetPosts\"><h2>Loading or no data found...</h2></div>;\r\n    }\r\n    const incrementLikes = async () => {\r\n        const newLikes = likes + 1;\r\n        const { data, error } = await supabase\r\n            .from('Posts')\r\n            .update({ likes: newLikes })\r\n            .eq('id', id);\r\n    \r\n        if (!error) {\r\n            setLikes(newLikes);  // Update likes state\r\n        } else {\r\n            console.error('Error updating likes:', error);\r\n        }\r\n    };\r\n    const handleCommentSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { data, error } = await supabase\r\n          .from('comments')\r\n          .insert([\r\n            {\r\n              post_id: id,\r\n              content: newComment,\r\n              // If you have user authentication, you can add an author_id here\r\n            },\r\n          ]);\r\n      \r\n        if (error) {\r\n          console.error('Error submitting comment:', error);\r\n        } else {\r\n          setComments([...comments, data[0]]);\r\n          setNewComment(''); // Reset the form\r\n        }\r\n      };\r\n    \r\n\r\n    return (\r\n        <div className=\"DetPosts\">\r\n            <div>\r\n                <h1>{selectedCard.title}</h1>  \r\n                <p>Meal Type:  {selectedCard.description}</p>\r\n                <p>Recipe:  {selectedCard.author}</p>\r\n                <Link to=\"/\"><button className=\"headerBtn\"> Back to Home</button></Link>\r\n                <Link to={`/edit/${selectedCard.id}`}><button>Edit or Delete</button></Link>\r\n                <button class=\"likeButton\" onClick={incrementLikes}>Like {likes}</button>\r\n            </div>\r\n            <form onSubmit={handleCommentSubmit}>\r\n                <textarea\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    placeholder=\"Write your comment...\"\r\n                    required\r\n                    />\r\n                <button type=\"submit\" >Submit Comment</button>\r\n            </form>\r\n\r\n            <div className=\"comments-section\">\r\n                {comments.map((comment) => (\r\n                <div key={comment.id} className=\"comment\">\r\n                    <p>{comment.content}</p>\r\n                    <p>{comment.created_at}</p>\r\n                </div>\r\n                \r\n    \r\n             ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetPosts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}