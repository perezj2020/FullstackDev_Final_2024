{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jp\\\\OneDrive\\\\Documents\\\\GitHub\\\\final-project-perezj2020\\\\client\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  // Displaying the creation date. Assuming `created_at` is in ISO 8601 format and passed as a prop.\n  const formatDate = dateString => {\n    if (!dateString) return 'No date provided';\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const [count, setCount] = useState(0); // State to track the count of clicks\n\n  const incrementLikes = async postId => {\n    const {\n      data,\n      error\n    } = await supabase.from('Posts').update({\n      likes: supabase.raw('likes + 1')\n    }) // Use raw SQL to increment likes\n    .match({\n      id: postId\n    });\n\n    if (error) {\n      console.error('Error updating likes:', error);\n    }\n\n    return data;\n  };\n\n  const incrementCount = () => {\n    setCount(count + 1); // Increment the count state by 1 on each click\n  };\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: 'edit/' + props.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timestamp\",\n      children: [\"Created: \", formatDate(props.created_at)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Meal Type: \" + props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${props.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"headerBtn\",\n        children: \"Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"likeButton\",\n      onClick: handleLike,\n      children: [\"Like \", likes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["more","Link","React","useState","Card","props","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","count","setCount","incrementLikes","postId","data","error","supabase","from","update","likes","raw","match","id","console","incrementCount","created_at","title","description","handleLike"],"sources":["C:/Users/jp/OneDrive/Documents/GitHub/final-project-perezj2020/client/src/components/Card.js"],"sourcesContent":["\r\nimport './Card.css';\r\nimport more from './more.png';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nconst Card = (props) => {\r\n  // Displaying the creation date. Assuming `created_at` is in ISO 8601 format and passed as a prop.\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'No date provided';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  }\r\n  const [count, setCount] = useState(0);  // State to track the count of clicks\r\n\r\n  const incrementLikes = async (postId) => {\r\n    const { data, error } = await supabase\r\n        .from('Posts')\r\n        .update({ likes: supabase.raw('likes + 1') }) // Use raw SQL to increment likes\r\n        .match({ id: postId });\r\n\r\n    if (error) {\r\n        console.error('Error updating likes:', error);\r\n    }\r\n    return data;\r\n};\r\n\r\n  const incrementCount = () => {\r\n    setCount(count + 1);  // Increment the count state by 1 on each click\r\n  };;\r\n\r\n  return (\r\n    <div className=\"Card\">\r\n      <Link to={'edit/' + props.id}>\r\n        <img className=\"moreButton\" alt=\"edit button\" src={more} />\r\n      </Link>\r\n      <p className=\"timestamp\">Created: {formatDate(props.created_at)}</p>\r\n      <h2 className=\"title\">{props.title}</h2>\r\n      <p className=\"description\">{\"Meal Type: \" + props.description}</p>\r\n      <Link to={`/posts/${props.id}`}>\r\n        <button className=\"headerBtn\">Recipe</button>\r\n      </Link>\r\n      <button className=\"likeButton\" onClick={handleLike}>\r\n        Like {likes}  \r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";;;AACA,OAAO,YAAP;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EACtB;EACA,MAAMC,UAAU,GAAIC,UAAD,IAAgB;IACjC,IAAI,CAACA,UAAL,EAAiB,OAAO,kBAAP;IACjB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,UAAT,CAAb;IACA,OAAOC,IAAI,CAACE,kBAAL,CAAwB,OAAxB,EAAiC;MACtCC,IAAI,EAAE,SADgC;MAEtCC,KAAK,EAAE,MAF+B;MAGtCC,GAAG,EAAE,SAHiC;MAItCC,IAAI,EAAE,SAJgC;MAKtCC,MAAM,EAAE;IAL8B,CAAjC,CAAP;EAOD,CAVD;;EAWA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC,CAbsB,CAakB;;EAExC,MAAMe,cAAc,GAAG,MAAOC,MAAP,IAAkB;IACvC,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkB,MAAMC,QAAQ,CACjCC,IADyB,CACpB,OADoB,EAEzBC,MAFyB,CAElB;MAAEC,KAAK,EAAEH,QAAQ,CAACI,GAAT,CAAa,WAAb;IAAT,CAFkB,EAEoB;IAFpB,CAGzBC,KAHyB,CAGnB;MAAEC,EAAE,EAAET;IAAN,CAHmB,CAA9B;;IAKA,IAAIE,KAAJ,EAAW;MACPQ,OAAO,CAACR,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;IACH;;IACD,OAAOD,IAAP;EACH,CAVC;;EAYA,MAAMU,cAAc,GAAG,MAAM;IAC3Bb,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CAD2B,CACL;EACvB,CAFD;;EAEE;EAEF,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE,QAAC,IAAD;MAAM,EAAE,EAAE,UAAUX,KAAK,CAACuB,EAA1B;MAAA,uBACE;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAC,aAAhC;QAA8C,GAAG,EAAE5B;MAAnD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAG,SAAS,EAAC,WAAb;MAAA,wBAAmCM,UAAU,CAACD,KAAK,CAAC0B,UAAP,CAA7C;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAI,SAAS,EAAC,OAAd;MAAA,UAAuB1B,KAAK,CAAC2B;IAA7B;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAG,SAAS,EAAC,aAAb;MAAA,UAA4B,gBAAgB3B,KAAK,CAAC4B;IAAlD;MAAA;MAAA;MAAA;IAAA,QANF,eAOE,QAAC,IAAD;MAAM,EAAE,EAAG,UAAS5B,KAAK,CAACuB,EAAG,EAA7B;MAAA,uBACE;QAAQ,SAAS,EAAC,WAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF,eAUE;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEM,UAAxC;MAAA,oBACQT,KADR;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA/CD;;GAAMrB,I;;KAAAA,I;AAiDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}